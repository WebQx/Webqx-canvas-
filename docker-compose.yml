version: '3.8'

services:
  # Middleware API Gateway
  api-gateway:
    build: ./middleware
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://webqx:password@postgres:5432/webqx_middleware
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./middleware:/app
    command: python manage.py runserver 0.0.0.0:8000

  # OpenEMR Integration Service
  openemr-service:
    build: ./backend-services/openemr-integration
    ports:
      - "8001:8000"
    environment:
      - OPENEMR_BASE_URL=http://openemr:80
      - DATABASE_URL=postgresql://webqx:password@postgres:5432/webqx_openemr
    depends_on:
      - postgres

  # Journaling Database Service
  journaling-service:
    build: ./backend-services/journaling-db
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://webqx:password@postgres:5432/webqx_journal
      - NLP_MODEL_PATH=/models
    depends_on:
      - postgres
    volumes:
      - nlp_models:/models

  # Telehealth Service
  telehealth-service:
    build: ./backend-services/telehealth
    ports:
      - "8003:8000"
      - "3478:3478/udp"  # STUN server
    environment:
      - ZOOM_API_KEY=${ZOOM_API_KEY}
      - ZOOM_API_SECRET=${ZOOM_API_SECRET}
      - WEBRTC_ICE_SERVERS=stun:stun.l.google.com:19302
    depends_on:
      - redis

  # Notification Service
  notification-service:
    build: ./backend-services/notifications
    ports:
      - "8004:8000"
    environment:
      - FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
    depends_on:
      - redis

  # Analytics Engine
  analytics-service:
    build: ./backend-services/analytics
    ports:
      - "8005:8000"
    environment:
      - DATABASE_URL=postgresql://webqx:password@postgres:5432/webqx_analytics
    depends_on:
      - postgres

  # Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=webqx
      - POSTGRES_PASSWORD=password
      - POSTGRES_MULTIPLE_DATABASES=webqx_middleware,webqx_openemr,webqx_journal,webqx_analytics
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/postgres-init.sh:/docker-entrypoint-initdb.d/postgres-init.sh

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # OpenEMR (for development/testing)
  openemr:
    image: openemr/openemr:7.0.2
    ports:
      - "8080:80"
      - "9300:443"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_ROOT_USER=root
      - MYSQL_ROOT_PASS=password
      - MYSQL_USER=openemr
      - MYSQL_PASS=openemr
      - OE_USER=admin
      - OE_PASS=admin
    depends_on:
      - mysql
    volumes:
      - openemr_sites:/var/www/localhost/htdocs/openemr/sites

  # MySQL for OpenEMR
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=openemr
      - MYSQL_USER=openemr
      - MYSQL_PASSWORD=openemr
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # NGINX Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
      - openemr-service
      - journaling-service
      - telehealth-service
      - notification-service
      - analytics-service

volumes:
  postgres_data:
  redis_data:
  mysql_data:
  openemr_sites:
  nlp_models: